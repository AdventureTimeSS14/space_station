# - type: entity
#   parent: CrateGeneric
#   id: CrateBaseWeldable
#   components:
#   - type: Weldable
#   - type: ResistLocker


# - type: entity
#   parent: CrateBaseWeldable
#   id: CrateBaseSecure
#   components:
#   - type: Lock
#   - type: AccessReader
#   - type: Icon
#     sprite: Structures/Storage/Crates/secure.rsi
#     state: icon
#   - type: Sprite
#     sprite: Structures/Storage/Crates/secure.rsi
#     layers:
#     - state: base
#     - state: closed
#       map: ["enum.StorageVisualLayers.Door"]
#     - state: welded
#       visible: false
#       map: ["enum.WeldableLayers.BaseWelded"]
#     - state: locked
#       map: ["enum.StorageVisualLayers.Lock"]
#       shader: unshaded
#   - type: Damageable
#     damageContainer: Inorganic
#     damageModifierSet: StrongMetallic
#   - type: Destructible
#     thresholds:
#     - trigger:
#         !type:DamageTrigger
#         damage: 75
#       behaviors:
#       - !type:DoActsBehavior
#         acts: ["Destruction"]
#   - type: Construction
#     graph: CrateSecure
#     node: cratesecure
#     containers:
#     - entity_storage
#   - type: Reflect
#     reflects:
#     - Energy
#     reflectProb: 0.2
#     spread: 90

# Прототип кейса для хранения оружия.
# - type: entity
#   parent: CrateBaseSecure
#   id: ADTCrateCaseSecurity
#   name: secgear crate
#   components:
#   - type: Icon
#     sprite: Structures/Storage/Crates/sec_gear.rsi
#   - type: Sprite
#     sprite: Structures/Storage/Crates/sec_gear.rsi
#   - type: AccessReader
#     access: [["Security"]]
#   - type: Item
#     size: Ginormous

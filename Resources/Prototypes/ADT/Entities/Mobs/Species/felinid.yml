- type: entity
  save: false
  name: Base felinid
  parent: BaseMobHuman
  id: MobFelinidBase
  abstract: true
  components:
  - type: Felinid
  - type: Sprite
    netsync: false
    noRot: true
    drawdepth: Mobs
    scale: 0.98, 0.98
    layers:
      - map: [ "enum.HumanoidVisualLayers.Chest" ]
      - map: [ "enum.HumanoidVisualLayers.Head" ]
      - map: [ "enum.HumanoidVisualLayers.Snout" ]
      - map: [ "enum.HumanoidVisualLayers.Eyes" ]
      - map: [ "enum.HumanoidVisualLayers.RArm" ]
      - map: [ "enum.HumanoidVisualLayers.LArm" ]
      - map: [ "enum.HumanoidVisualLayers.RLeg" ]
      - map: [ "enum.HumanoidVisualLayers.LLeg" ]
      - shader: StencilClear
        sprite: Mobs/Species/Human/parts.rsi
        state: l_leg
      - shader: StencilMask
        map: ["enum.HumanoidVisualLayers.StencilMask"]
        sprite: Mobs/Customization/masking_helpers.rsi
        state: unisex_full
        visible: false
      - map: [ "underwearb" ] #Sirena
      - map: [ "underweart" ] #Sirena
      - map: ["enum.HumanoidVisualLayers.LFoot"]
      - map: ["enum.HumanoidVisualLayers.RFoot"]
      - map: [ "socks" ] #Sirena
      - map: [ "jumpsuit" ]
      - map: [ "enum.HumanoidVisualLayers.LHand" ]
      - map: [ "enum.HumanoidVisualLayers.RHand" ]
      - map: [ "id" ]
      - map: [ "gloves" ]
      - map: [ "shoes" ]
      - map: [ "ears" ]
      - map: [ "outerClothing" ]
      - map: [ "eyes" ]
      - map: [ "belt" ]
      - map: [ "neck" ]
      - map: [ "back" ]
      - map: [ "enum.HumanoidVisualLayers.FacialHair" ]
      - map: [ "enum.HumanoidVisualLayers.Hair" ]
      - map: [ "enum.HumanoidVisualLayers.HeadSide" ]
      - map: [ "enum.HumanoidVisualLayers.HeadTop" ]
      - map: [ "enum.HumanoidVisualLayers.Tail" ]
      - map: [ "mask" ]
      - map: [ "head" ]
      - map: [ "pocket1" ]
      - map: [ "pocket2" ]
      - map: ["enum.HumanoidVisualLayers.Handcuffs"]
        color: "#ffffff"
        sprite: Objects/Misc/handcuffs.rsi
        state: body-overlay-2
        visible: false
      - map: [ "clownedon" ]
        sprite: "Effects/creampie.rsi"
        state: "creampie_human"
        visible: false
  - type: HumanoidAppearance
    species: Felinid
  - type: Destructible #процесс разрушения на органы
    thresholds:
    - trigger:
        !type:DamageTypeTrigger
        damageType: Blunt #при каком дамаге это происходит
        damage: 300
      behaviors:
      - !type:GibBehavior { }
  - type: Fixtures
    fixtures: # TODO: This needs a second fixture just for mob collisions.
      fix1:
        shape:
          !type:PhysShapeCircle
          radius: 0.30
        density: 160
        restitution: 0.0
        mask:
        - MobMask
        layer:
        - MobLayer
  - type: Body
    prototype: Felinid
  - type: Damageable
    damageContainer: Biological
    damageModifierSet: Felinid
  - type: MeleeWeapon
    soundHit:
      collection: Punch
    animation: WeaponArcClaw
    damage:
      types:
        Blunt: 0.9
        Slash: 5
  - type: Blindable
  - type: Speech
    speechSounds: Alto
  - type: DamageOnHighSpeedImpact
    damage:
      types:
        Blunt: 0.9
    soundHit:
      path: /Audio/Effects/hit_kick.ogg
  - type: Perishable
  - type: Butcherable
    butcheringType: Spike # TODO human.
    spawned:
      - id: FoodMeat
      - id: ClothingHeadHatCatEars

- type: entity
  save: false
  name: Felinid Dummy
  parent: MobHumanDummy
  id: MobFelinidDummy
  noSpawn: true
  description: A dummy felinid meant to be used in character setup.
  components:
  - type: Sprite
    netsync: false
    noRot: true
    drawdepth: Mobs
    scale: 1, 1
    layers:
      # TODO BODY Turn these into individual body parts?
        - map: [ "enum.HumanoidVisualLayers.Chest" ]
        - map: [ "enum.HumanoidVisualLayers.Head" ]
        - map: [ "enum.HumanoidVisualLayers.Snout" ]
        - map: [ "enum.HumanoidVisualLayers.Eyes" ]
        - map: [ "enum.HumanoidVisualLayers.RArm" ]
        - map: [ "enum.HumanoidVisualLayers.LArm" ]
        - map: [ "enum.HumanoidVisualLayers.RLeg" ]
        - map: [ "enum.HumanoidVisualLayers.LLeg" ]
        - shader: StencilClear
          sprite: Mobs/Species/Human/parts.rsi
          state: l_leg
        - shader: StencilMask
          map: ["enum.HumanoidVisualLayers.StencilMask"]
          sprite: Mobs/Customization/masking_helpers.rsi
          state: unisex_full
          visible: false
        - map: [ "underwearb" ] #Sirena
        - map: [ "underweart" ] #Sirena
        - map: ["enum.HumanoidVisualLayers.LFoot"]
        - map: ["enum.HumanoidVisualLayers.RFoot"]
        - map: [ "socks" ] #Sirena
        - map: [ "jumpsuit" ]
        - map: [ "enum.HumanoidVisualLayers.LHand" ]
        - map: [ "enum.HumanoidVisualLayers.RHand" ]
        - map: [ "enum.HumanoidVisualLayers.Handcuffs" ]
          color: "#ffffff"
          sprite: Objects/Misc/handcuffs.rsi
          state: body-overlay-2
          visible: false
        - map: [ "id" ]
        - map: [ "gloves" ]
        - map: [ "shoes" ]
        - map: [ "ears" ]
        - map: [ "outerClothing" ]
        - map: [ "eyes" ]
        - map: [ "belt" ]
        - map: [ "neck" ]
        - map: [ "back" ]
        - map: [ "enum.HumanoidVisualLayers.FacialHair" ]
        - map: [ "enum.HumanoidVisualLayers.Hair" ]
        - map: [ "enum.HumanoidVisualLayers.HeadSide" ]
        - map: [ "enum.HumanoidVisualLayers.HeadTop" ]
        - map: [ "enum.HumanoidVisualLayers.Tail" ]
        - map: [ "mask" ]
        - map: [ "head" ]
        - map: [ "pocket1" ]
        - map: [ "pocket2" ]


- type: entity
  parent: BaseItem
  id: Hairball
  name: hairball
  description: Felinids, man... Placeholder sprite.
  components:
    - type: Sprite
      sprite: ADT/Objects/Specific/felinid.rsi
      state: icon
    - type: Hairball
    - type: SolutionContainerManager
      solutions:
        hairball:
          maxVol: 25
          reagents:
            - ReagentId: Protein
              Quantity: 2
    - type: Extractable
      grindableSolutionName: hairball
    # - type: Tag
    #   tags:
    #     - Recyclable
    #     - Trash

- type: entity
  id: ActionHairball
  name: hairball-action
  description: hairball-action-desc
  noSpawn: true
  components:
    - type: InstantAction
#      icon: { sprite: Backmen/Structures/web.rsi, state: web1 }
      priority: -10
      event: !type:HairballActionEvent
      charges: 100  #костыль
      useDelay: 100 #

- type: entity
  id: ActionEatMouse
  name: action-name-eat-mouse
  description: action-description-eat-mouse
  noSpawn: true
  components:
    - type: InstantAction
      useDelay: 10
      icon: ADT/Icons/verbiconfangs.png
      event: !type:EatMouseActionEvent
